<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8">
  <title>进度条</title>
  <style>
    body {
      font-family: sans-serif;
      text-align: center;
      padding-top: 80px;
    }

    .loading-text {
      font-size: 20px;
      margin-bottom: 40px;
    }

    .bar-container {
      width: 60%;
      margin: 0 auto;
      height: 20px;
      background-color: #ccc;
      border-radius: 5px;
      overflow: hidden;
      position: relative;
    }

    .progress-fill {
      height: 100%;
      width: 0%;
      background-color: #1E90FF;
      transition: width 0.1s ease;
    }

    /* segmented container as flex */
    .bar-container.segmented {
      display: flex;
      gap: 4px;
      background-color: transparent;
    }

    .segment {
      flex: 1;
      background-color: #ccc;
      height: 20px;
      border-radius: 3px;
      overflow: hidden;
      position: relative;
    }

    .segment-fill {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0%;
      background-color: #1E90FF;
      transition: width 0.1s ease;
    }

    .done-message {
      margin-top: 30px;
      font-size: 18px;
    }

    .keyword {
      color: red;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <div class="loading-text">关键词正在加载中：</div>
  <div id="barArea"></div>

  <div class="done-message" id="doneMessage" style="display: none;">
    您的关键词是：<span class="keyword">红色</span>
  </div>

  <script>
    const formatType = 'solid'; // 'solid' or 'segmented'
    const duration = 15000; // 总时长（毫秒）
    const barArea = document.getElementById('barArea');
    const doneMessage = document.getElementById('doneMessage');

    if (formatType === 'solid') {
      // 连续进度条
      barArea.innerHTML = `
        <div class="bar-container">
          <div class="progress-fill" id="fillBar"></div>
        </div>
      `;
      const fill = document.getElementById('fillBar');
      let startTime = Date.now();
      const interval = setInterval(() => {
        let percent = Math.min((Date.now() - startTime) / duration * 100, 100);
        fill.style.width = percent + '%';
        if (percent >= 100) {
          clearInterval(interval);
          doneMessage.style.display = 'block';
        }
      }, 50);
    }

    if (formatType === 'segmented') {
      // 分段式进度条，动态推进每一段
      const segmentsCount = 4;
      barArea.innerHTML = `<div class="bar-container segmented" id="segmentedBar"></div>`;
      const segmentedBar = document.getElementById('segmentedBar');

      for (let i = 0; i < segmentsCount; i++) {
        const seg = document.createElement('div');
        seg.classList.add('segment');
        const fill = document.createElement('div');
        fill.classList.add('segment-fill');
        seg.appendChild(fill);
        segmentedBar.appendChild(seg);
      }

      const segmentFills = document.querySelectorAll('.segment-fill');
      let currentSegment = 0;
      const segmentDuration = duration / segmentsCount;
      let segmentStart = Date.now();

      const interval = setInterval(() => {
        const elapsed = Date.now() - segmentStart;
        const percent = Math.min(elapsed / segmentDuration * 100, 100);
        segmentFills[currentSegment].style.width = percent + '%';

        if (percent >= 100) {
          currentSegment++;
          segmentStart = Date.now();
          if (currentSegment >= segmentsCount) {
            clearInterval(interval);
            doneMessage.style.display = 'block';
          }
        }
      }, 50);
    }
  </script>
</body>
</html>
